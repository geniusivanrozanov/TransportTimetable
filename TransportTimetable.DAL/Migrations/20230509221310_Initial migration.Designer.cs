// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using TransportTimetable.DAL;

#nullable disable

namespace TransportTimetable.DAL.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230509221310_Initial migration")]
    partial class Initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TransportTimetable.DAL.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("TransportTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TransportTypeId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.RouteStop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StopId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StopId");

                    b.HasIndex("RouteId", "Order")
                        .IsUnique();

                    b.ToTable("RouteStop");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.Stop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.TimeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<Guid>("RouteStopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("RouteStopId");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.TransportType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("TransportTypes");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.Route", b =>
                {
                    b.HasOne("TransportTimetable.DAL.Entities.TransportType", "TransportType")
                        .WithMany("Routes")
                        .HasForeignKey("TransportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportType");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.RouteStop", b =>
                {
                    b.HasOne("TransportTimetable.DAL.Entities.Route", "Route")
                        .WithMany("RouteStops")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransportTimetable.DAL.Entities.Stop", "Stop")
                        .WithMany("RouteStops")
                        .HasForeignKey("StopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.TimeTable", b =>
                {
                    b.HasOne("TransportTimetable.DAL.Entities.RouteStop", "RouteStop")
                        .WithMany("TimeTables")
                        .HasForeignKey("RouteStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RouteStop");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.Route", b =>
                {
                    b.Navigation("RouteStops");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.RouteStop", b =>
                {
                    b.Navigation("TimeTables");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.Stop", b =>
                {
                    b.Navigation("RouteStops");
                });

            modelBuilder.Entity("TransportTimetable.DAL.Entities.TransportType", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
